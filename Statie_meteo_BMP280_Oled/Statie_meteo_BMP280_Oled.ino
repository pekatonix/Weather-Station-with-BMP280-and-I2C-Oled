/*Inspirat dupa: https://abidcg.wordpress.com/2018/10/14/bmp280-weather-station/
Modificat de Pekatonix, Tg-Mures, Ro
Conectiuni:
BMP280 la Arduino:
vcc la 5V (pentru varianta chinezeasca, pentru BMP280 de la Bosh: vcc la 3,3V)
Gnd la Gnd
SCL la A5
SDA la A4
Oled la Arduino:
Vcc la 5v sau 3.3v
Gnd la Gnd
SCL la A5 
SDA la A4 

Senzorul BMP280 merge cu biblioteca Adafruit_BMP280. Atentie, trebuie sa schimbati adresa I2C din librarie. 
Urmati instructiunile de aici http://davidstein.cz/2017/09/30/arduino-bme280-could-not-find-a-valid-bme280-sensor-solved/
Modificati valorile presiunii atmosferice pentru "Prognoza Meteo" functie de altitudine.
*/

#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP280.h>
#define BMP_SCK 13
#define BMP_MISO 12
#define BMP_MOSI 11
#define BMP_CS 10

Adafruit_BMP280 bmp;

#include <U8glib.h>

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE|U8G_I2C_OPT_DEV_0); // I2C / TWI

float pressure;
float temp;
const uint8_t storm[] PROGMEM= {

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
0x80, 0x00, 0x00, 0x00, 0x07, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x60, 0x00, 0x00, 0x00,
0x0C, 0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x00, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,
0x00, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x1E, 0x00, 0x00, 0x07, 0xE0, 0x00,
0x0F, 0x00, 0x00, 0x0C, 0x00, 0x04, 0x01, 0x80, 0x00, 0x18, 0x00, 0x0C, 0x00, 0xC0, 0x00, 0x18,
0x00, 0x1C, 0x00, 0x40, 0x00, 0x10, 0x00, 0x1C, 0x00, 0x60, 0x00, 0x30, 0x00, 0x3C, 0x00, 0x60,
0x00, 0x30, 0x00, 0x6C, 0x00, 0x60, 0x00, 0x30, 0x00, 0xCC, 0x00, 0x60, 0x00, 0x10, 0x00, 0xCC,
0x00, 0x60, 0x00, 0x10, 0x01, 0x88, 0x00, 0x40, 0x00, 0x18, 0x03, 0x08, 0x00, 0xC0, 0x00, 0x0C,
0x06, 0x08, 0x01, 0x80, 0x00, 0x07, 0x06, 0x1F, 0xC3, 0x80, 0x00, 0x03, 0xFC, 0x0F, 0xFE, 0x00,
0x00, 0x00, 0x18, 0x01, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x83, 0x00, 0x00, 0x00, 0x00, 0x01, 0x86,
0x00, 0x00, 0x00, 0x00, 0x01, 0x86, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x8C, 0x30, 0x00, 0x00, 0x03,
0xC1, 0x18, 0x78, 0x00, 0x00, 0x07, 0xC1, 0x30, 0xF8, 0x00, 0x00, 0x0C, 0xC3, 0x31, 0x98, 0x00,
0x00, 0x08, 0x83, 0x63, 0x18, 0x00, 0x00, 0x18, 0x83, 0xC3, 0x10, 0x00, 0x00, 0x19, 0x83, 0x83,
0x30, 0x00, 0x00, 0x0F, 0x83, 0x01, 0xF0, 0x00, 0x00, 0x07, 0x07, 0x00, 0xE0, 0x00, 0x00, 0x00,
0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

const uint8_t presure[] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xC0, 0x03, 0xFC, 0x00, 0x00, 0x7E, 0x03, 0xC0,
0x7E, 0x00, 0x00, 0xF8, 0x03, 0xC0, 0x1F, 0x00, 0x01, 0xF0, 0x03, 0xC0, 0x0F, 0x80, 0x03, 0xE6,
0x03, 0xC0, 0x67, 0xC0, 0x07, 0xCE, 0x03, 0xC0, 0x73, 0xE0, 0x0F, 0x8F, 0x03, 0xC0, 0xF1, 0xF0,
0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x1E, 0x07, 0xC0, 0x03, 0xE0, 0x78, 0x1C, 0x03, 0xC0, 0x03,
0xC0, 0x38, 0x3C, 0x01, 0x80, 0x01, 0x80, 0x3C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x78, 0x00,
0x00, 0x00, 0x00, 0x1E, 0x7B, 0x80, 0x01, 0x80, 0x01, 0xDE, 0x73, 0xF0, 0x01, 0x80, 0x0F, 0xCE,
0x73, 0xF8, 0x01, 0x80, 0x1F, 0xCE, 0xF1, 0xF8, 0x01, 0x80, 0x1F, 0x8F, 0xF0, 0x30, 0x01, 0x80,
0x0C, 0x0F, 0xE0, 0x00, 0x01, 0x80, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xE0, 0x00,
0x03, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xC0, 0x00, 0x0F,
0xF0, 0xF0, 0x03, 0xC0, 0x0F, 0x0F, 0xF3, 0xF8, 0x07, 0xE0, 0x1F, 0xCF, 0x73, 0xF8, 0x0F, 0xF0,
0x1F, 0xCE, 0x73, 0xC0, 0x1F, 0xF8, 0x03, 0xCE, 0x78, 0x00, 0x1F, 0xF8, 0x00, 0x1E, 0x38, 0x00,
0x1F, 0xF8, 0x00, 0x1C, 0x38, 0x00, 0x1F, 0xF8, 0x00, 0x1C, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00,
0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const uint8_t rain[] PROGMEM = {

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x18, 0x00, 0x00,
0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x03,
0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0x80, 0x00, 0x00, 0x1E,
0x00, 0x00, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x08, 0x00,
0x00, 0x40, 0x00, 0x00, 0x0C, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x04, 0x00, 0x00, 0xC0, 0x00, 0x00,
0x04, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x04, 0x00, 0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x40,
0x00, 0x00, 0x0C, 0x00, 0x00, 0x60, 0x00, 0x00, 0x18, 0x00, 0x00, 0x38, 0x00, 0x00, 0x30, 0x00,
0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0x01,
0x80, 0x00, 0x00, 0x0F, 0x07, 0x03, 0xC0, 0x00, 0x00, 0x1B, 0x09, 0x04, 0xC0, 0x00, 0x00, 0x32,
0x19, 0x0C, 0x80, 0x00, 0x00, 0x32, 0x19, 0x0C, 0x80, 0x00, 0x00, 0x1E, 0x0F, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xD0,
0x00, 0x00, 0x00, 0x03, 0xA1, 0x10, 0x00, 0x00, 0x00, 0x02, 0x21, 0x30, 0x00, 0x00, 0x00, 0x03,
0x61, 0xB0, 0x00, 0x00, 0x00, 0x01, 0xC0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const uint8_t temperature[] PROGMEM = {

0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xE0,
0x00, 0x00, 0x00, 0x01, 0xE0, 0x70, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x70, 0x00, 0x00, 0x00, 0x03,
0x80, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x80, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x80, 0x38, 0x00, 0x00,
0x00, 0x03, 0x80, 0x38, 0x00, 0x00, 0x00, 0x03, 0x80, 0x38, 0x00, 0x00, 0x00, 0x03, 0x80, 0x39,
0xFC, 0x00, 0x00, 0x03, 0x80, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x8E, 0x38, 0x00, 0x00, 0x00, 0x03,
0x9F, 0x38, 0x00, 0x00, 0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00,
0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x38, 0x00, 0x00, 0x00, 0x03, 0x9F, 0x38,
0x00, 0x00, 0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03,
0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x38, 0x00, 0x00, 0x00, 0x03, 0x9F, 0x38, 0x00, 0x00,
0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x39, 0xFC, 0x00, 0x00, 0x03, 0x9F, 0x38,
0x00, 0x00, 0x00, 0x07, 0x9F, 0x3C, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x1E, 0x00, 0x00, 0x00, 0x1E,
0x3F, 0x87, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0xC7, 0x00, 0x00, 0x00, 0x38, 0xFF, 0xE3, 0x80, 0x00,
0x00, 0x39, 0xFF, 0xF3, 0x80, 0x00, 0x00, 0x31, 0xFF, 0xF1, 0x80, 0x00, 0x00, 0x73, 0xFF, 0xF9,
0xC0, 0x00, 0x00, 0x73, 0xFF, 0xF9, 0xC0, 0x00, 0x00, 0x73, 0xFF, 0xF9, 0xC0, 0x00, 0x00, 0x73,
0xFF, 0xF9, 0xC0, 0x00, 0x00, 0x31, 0xFF, 0xF1, 0x80, 0x00, 0x00, 0x39, 0xFF, 0xF1, 0x80, 0x00,
0x00, 0x38, 0xFF, 0xE3, 0x80, 0x00, 0x00, 0x1C, 0x7F, 0xC7, 0x00, 0x00, 0x00, 0x1E, 0x3F, 0x87,
0x00, 0x00, 0x00, 0x0F, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x07, 0x80, 0x3C, 0x00, 0x00, 0x00, 0x03,
0xF1, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00

};

const uint8_t sunny[] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x00, 0x00,
0x83, 0x04, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x40, 0x08, 0x00, 0x00,
0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x10, 0x30, 0x38, 0x20, 0x00, 0x00, 0x18, 0xC0, 0x0C,
0x60, 0x00, 0x00, 0x0C, 0x80, 0x04, 0xC0, 0x00, 0x00, 0x01, 0x80, 0x02, 0x00, 0x00, 0x00, 0x01,
0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00,
0x00, 0x72, 0x00, 0x01, 0x38, 0x00, 0x00, 0x72, 0x00, 0x01, 0x38, 0x00, 0x00, 0x02, 0x00, 0x01,
0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x80, 0x06, 0x80, 0x00, 0x00, 0x1C, 0xC0, 0x0C, 0xE0, 0x00,
0x00, 0x10, 0x70, 0x38, 0x20, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x08,
0x00, 0x00, 0x00, 0x00, 0x43, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83, 0x04, 0x00, 0x00, 0x00, 0x00,
0x83, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

const uint8_t intro[] PROGMEM= {

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
  0x1f, 0xf0, 0x00, 0x00, 0x7c, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xf0, 0x18, 
  0x3f, 0xfc, 0x00, 0x00, 0x7c, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xf0, 0x38, 
  0x3f, 0xfe, 0x00, 0x00, 0x7c, 0x00, 0x0f, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xf0, 0x30, 
  0x3f, 0xff, 0x00, 0x00, 0x7c, 0x00, 0x1f, 0x80, 0x30, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xf8, 0x30, 
  0x3f, 0x1f, 0x80, 0x00, 0x7c, 0x00, 0x1f, 0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xf8, 0x70, 
  0x3f, 0x1f, 0x80, 0x00, 0x7c, 0x00, 0x1f, 0x81, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xf8, 0x60, 
  0x3f, 0x0f, 0x80, 0x00, 0x7c, 0x00, 0x1f, 0xc1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x60, 
  0x3f, 0x0f, 0x80, 0x00, 0x7c, 0x00, 0x1f, 0xc1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xe0, 
  0x3f, 0x0f, 0x80, 0x00, 0x7c, 0x00, 0x1f, 0xc1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xc0, 
  0x3f, 0x0f, 0x81, 0xe0, 0x7c, 0x08, 0x3f, 0xc1, 0xf8, 0x0f, 0x80, 0xf1, 0xe0, 0x70, 0xfc, 0xc0, 
  0x3f, 0x0f, 0xc3, 0xf0, 0x7c, 0x18, 0x3f, 0xc3, 0xfe, 0x1f, 0xc1, 0xfb, 0xf1, 0xf0, 0x7e, 0xc0, 
  0x3f, 0x0f, 0x87, 0xf8, 0x7c, 0x18, 0x37, 0xc3, 0xfe, 0x3d, 0xe1, 0xf3, 0xf1, 0xf0, 0x7f, 0x80, 
  0x3f, 0x0f, 0x87, 0x38, 0x7c, 0x30, 0x37, 0xe3, 0xfc, 0x7d, 0xf1, 0xff, 0xf1, 0xf0, 0x7f, 0x80, 
  0x3f, 0x0f, 0x8f, 0x3c, 0x7c, 0x30, 0x37, 0xe1, 0xf0, 0x78, 0xf1, 0xff, 0xf1, 0xf0, 0x3f, 0x80, 
  0x3f, 0x0f, 0x8f, 0x3c, 0x7c, 0x60, 0x37, 0xe1, 0xf0, 0x78, 0xf1, 0xfd, 0xf9, 0xf0, 0x3f, 0x00, 
  0x3f, 0x0f, 0x9f, 0x3c, 0x7c, 0x60, 0x33, 0xe1, 0xf0, 0xf8, 0xf9, 0xf9, 0xf9, 0xf0, 0x3f, 0x00, 
  0x3f, 0x1f, 0x9f, 0x1e, 0x7c, 0xe0, 0x63, 0xe1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x3f, 0x00, 
  0x3f, 0x3f, 0x1f, 0x1e, 0x7c, 0xe0, 0x63, 0xe1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x1f, 0x80, 
  0x3f, 0xff, 0x1f, 0x1e, 0x7c, 0xe0, 0x63, 0xe1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x1f, 0x80, 
  0x3f, 0xfe, 0x1f, 0x1e, 0x7d, 0xe0, 0x63, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x1f, 0x80, 
  0x3f, 0xf8, 0x1f, 0x3e, 0x7d, 0xe0, 0x63, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x1f, 0xc0, 
  0x3f, 0x00, 0x1f, 0xfe, 0x7f, 0xf0, 0x63, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x1f, 0xc0, 
  0x3f, 0x00, 0x3f, 0xfe, 0x7f, 0xf0, 0xe1, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x3f, 0xc0, 
  0x3f, 0x00, 0x3f, 0xfc, 0x7f, 0xf0, 0xc1, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x3f, 0xe0, 
  0x3f, 0x00, 0x3f, 0x00, 0x7f, 0xf0, 0xe3, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x37, 0xe0, 
  0x3f, 0x00, 0x1f, 0x00, 0x7f, 0xf8, 0xff, 0xf1, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x77, 0xe0, 
  0x3f, 0x00, 0x1f, 0x00, 0x7c, 0xf8, 0xff, 0xf9, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x77, 0xe0, 
  0x3f, 0x00, 0x1f, 0x06, 0x7c, 0xf8, 0xff, 0xf9, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0x63, 0xf0, 
  0x3f, 0x00, 0x1f, 0x06, 0x7c, 0xf8, 0xc1, 0xf9, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0xe3, 0xf0, 
  0x3f, 0x00, 0x1f, 0x06, 0x7c, 0xf9, 0x80, 0xf9, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0xe3, 0xf0, 
  0x3f, 0x00, 0x1f, 0x06, 0x7c, 0xfd, 0x80, 0xf9, 0xf0, 0xf8, 0xf9, 0xf8, 0xf9, 0xf0, 0xc1, 0xf8, 
  0x3f, 0x00, 0x0f, 0x06, 0x7c, 0x7d, 0x80, 0xf9, 0xf0, 0x78, 0xf1, 0xf8, 0xf9, 0xf1, 0xc1, 0xf8, 
  0x3f, 0x00, 0x0f, 0x8c, 0x7c, 0x7d, 0x80, 0xf8, 0xfe, 0x79, 0xf1, 0xf8, 0xf9, 0xf1, 0xc1, 0xf8, 
  0x3f, 0x00, 0x0f, 0xdc, 0x7c, 0x7f, 0x80, 0xfc, 0xfe, 0x3d, 0xe1, 0xf8, 0xf9, 0xf1, 0x81, 0xfc, 
  0x3f, 0x00, 0x07, 0xf8, 0x7c, 0x7f, 0x80, 0xfc, 0xfc, 0x3f, 0xe1, 0xf9, 0xf9, 0xf3, 0x80, 0xfc, 
  0x1f, 0x00, 0x03, 0xf0, 0x7c, 0x7f, 0x00, 0x7c, 0x78, 0x0f, 0x80, 0xf0, 0xf0, 0xf3, 0x80, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t cloudy[] PROGMEM= {

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x40, 0x00,
0x00, 0x00, 0x03, 0x08, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3C,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x31, 0x81, 0x8C, 0x00, 0x00, 0x00,
0x1B, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x60, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 0x00,
0x00, 0x00, 0x3F, 0x80, 0x20, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x10, 0x00, 0x00, 0x00, 0x80, 0x60,
0x17, 0x00, 0x00, 0x01, 0x80, 0x30, 0x10, 0x00, 0x00, 0x03, 0x00, 0x10, 0x10, 0x00, 0x00, 0x02,
0x00, 0x10, 0x20, 0x00, 0x00, 0x1E, 0x00, 0x1C, 0x20, 0x00, 0x00, 0x7C, 0x00, 0x0E, 0x48, 0x00,
0x00, 0xC0, 0x00, 0x01, 0xCC, 0x00, 0x00, 0x80, 0x00, 0x01, 0x84, 0x00, 0x01, 0x80, 0x00, 0x00,
0x80, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x01, 0x00,
0x00, 0x00, 0xC0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x80, 0x00, 0x00, 0x80, 0x00,
0x00, 0xC0, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFE,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};
void draw(void) {
// graphic commands to redraw the complete screen should be placed here

u8g.setFont(u8g_font_8x13);
u8g.setPrintPos(5,10);
u8g.print("Statie Meteo");

u8g.drawBitmapP( 0, 20, 16, 64,intro);
}

void draw_4(void){
pressure=bmp.readPressure()/100;

delay(1);
u8g.setPrintPos(32,10);
u8g.print("Presiune");
u8g.setPrintPos(65,45);
u8g.print(pressure);
u8g.setPrintPos(70,60);
u8g.print("hPa");
u8g.drawBitmapP( 0, 15, 6, 48,presure);

}

void draw_2(void){

u8g.setFont(u8g_font_8x13);

u8g.setPrintPos(0,10);
u8g.print(" Temperatura");

u8g.setPrintPos(55,40);
u8g.print(temp);
u8g.setPrintPos(97,40);
u8g.print("C");
u8g.drawBitmapP( 0, 17, 6,48,temperature);
}

void draw3(void){
u8g.setPrintPos(3,10);
u8g.print("Prognoza Meteo");

if ((pressure<=973.59)&&(pressure>970.5)){
u8g.drawBitmapP( 10, 15, 6, 48,cloudy);
u8g.setPrintPos(60,45);
u8g.print("Noros");
}
else if((pressure<970.49)&&(pressure>968.5))
{
u8g.drawBitmapP( 10, 15, 6, 48,rain);
u8g.setPrintPos(66,38);
u8g.print("Ploaie");}
else if((pressure>973.6)&&(pressure<1050))
{
u8g.drawBitmapP( 5, 15, 6, 48,sunny);
u8g.setPrintPos(50,45);
u8g.print("Senin");}
else if((pressure>968.49)&&(pressure<=955.0))
{
u8g.drawBitmapP( 5, 15, 6, 48,storm);
u8g.setPrintPos(60,45);
u8g.print("Furtuna");}

else{
u8g.setPrintPos(40,40);
u8g.print("Error!");
}

}
void setup() {
Serial.begin(9600);
Serial.println(F("BMP280 test"));

if (!bmp.begin()) {
Serial.println(F("Could not find a valid BMP280 sensor, check wiring!"));
// while (1);
}
u8g.firstPage(); // first page
do {
draw();
}
while( u8g.nextPage() );
delay(2000);

}

void loop() {
temp=bmp.readTemperature();
u8g.firstPage(); // second page
do {
draw_2();
}
while( u8g.nextPage() );
delay(2000);
u8g.firstPage(); // second page
do {
draw_4();
}
while( u8g.nextPage() );
delay(2000);
u8g.firstPage(); // second page
do {
draw3();
}
while( u8g.nextPage() );
delay(2000);
}
